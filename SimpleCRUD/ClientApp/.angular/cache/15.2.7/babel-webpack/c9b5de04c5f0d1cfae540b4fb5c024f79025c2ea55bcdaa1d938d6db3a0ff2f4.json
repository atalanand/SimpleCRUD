{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/user.service\";\nimport * as i4 from \"@angular/common\";\nfunction AddUserComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1, \" Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddUserComponent_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const role_r6 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", role_r6.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", role_r6.title, \" \");\n  }\n}\nfunction AddUserComponent_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1, \" Role is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddUserComponent_option_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const state_r7 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", state_r7.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", state_r7.name, \" \");\n  }\n}\nfunction AddUserComponent_span_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1, \" State is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddUserComponent_span_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1, \" Address is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddUserComponent {\n  constructor(fb, avRoute, userService, router) {\n    this.fb = fb;\n    this.avRoute = avRoute;\n    this.userService = userService;\n    this.router = router;\n    this.title = 'Add User';\n    this.submitted = false;\n    if (this.avRoute.snapshot.params.id) {\n      this.id = this.avRoute.snapshot.params.id;\n    }\n    this.userForm = this.fb.group({\n      id: 0,\n      name: ['', [Validators.required]],\n      address: ['', [Validators.required]],\n      roleId: ['', [Validators.required]],\n      stateId: ['', [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    this.getStates();\n    this.getRoles();\n    if (this.id > 0) {\n      this.title = 'Update User';\n      this.userService.getUserDetail(this.id).subscribe(res => {\n        this.userForm.setValue(res);\n      }, error => console.error(error));\n    }\n  }\n  get registerFormControl() {\n    return this.userForm.controls;\n  }\n  addUser() {\n    this.userService.addUser(this.userForm.value).subscribe(() => {\n      alert('User added successfully');\n      this.router.navigate(['users']);\n    }, error => alert(error));\n  }\n  updateUser() {\n    this.userService.updateUser(this.userForm.value).subscribe(() => {\n      alert('User updated successfully');\n      this.router.navigate(['users']);\n    }, error => console.error(error));\n  }\n  save() {\n    this.submitted = true;\n    if (!this.userForm.valid) {\n      return;\n    }\n    if (this.title == 'Add User') {\n      this.addUser();\n    } else if (this.title == 'Update User') {\n      this.updateUser();\n    }\n  }\n  getStates() {\n    this.userService.getStates().subscribe(data => {\n      this.states = data;\n    });\n  }\n  getRoles() {\n    this.userService.getRoles().subscribe(data => {\n      this.roles = data;\n    });\n  }\n  cancel() {\n    this.router.navigate(['users']);\n  }\n}\nAddUserComponent.ɵfac = function AddUserComponent_Factory(t) {\n  return new (t || AddUserComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i2.Router));\n};\nAddUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddUserComponent,\n  selectors: [[\"app-add-user\"]],\n  decls: 41,\n  vars: 8,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"row\"], [1, \"control-label\", \"col-md-12\"], [1, \"col-md-4\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"data-val\", \"true\", \"formControlName\", \"roleId\", 1, \"form-control\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"data-val\", \"true\", \"formControlName\", \"stateId\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"address\", 1, \"form-control\"], [1, \"form-group\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"text-danger\"], [3, \"value\"]],\n  template: function AddUserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"hr\");\n      i0.ɵɵelementStart(3, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AddUserComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵelementStart(4, \"div\", 1)(5, \"label\", 2);\n      i0.ɵɵtext(6, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 3);\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, AddUserComponent_span_9_Template, 2, 0, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 1)(11, \"label\", 2);\n      i0.ɵɵtext(12, \"Role\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 3)(14, \"select\", 6)(15, \"option\", 7);\n      i0.ɵɵtext(16, \"--Select Role--\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, AddUserComponent_option_17_Template, 2, 2, \"option\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(18, AddUserComponent_span_18_Template, 2, 0, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 1)(20, \"label\", 2);\n      i0.ɵɵtext(21, \"State\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 3)(23, \"select\", 9)(24, \"option\", 7);\n      i0.ɵɵtext(25, \"--Select State--\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(26, AddUserComponent_option_26_Template, 2, 2, \"option\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(27, AddUserComponent_span_27_Template, 2, 0, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 1)(29, \"label\", 2);\n      i0.ɵɵtext(30, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"div\", 3)(32, \"textarea\", 10);\n      i0.ɵɵtext(33, \"                \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(34, AddUserComponent_span_34_Template, 2, 0, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(35, \"hr\");\n      i0.ɵɵelementStart(36, \"div\", 11)(37, \"button\", 12);\n      i0.ɵɵtext(38, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function AddUserComponent_Template_button_click_39_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(40, \"Cancel\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerFormControl.name.touched || ctx.submitted) && (ctx.registerFormControl.name.errors == null ? null : ctx.registerFormControl.name.errors.required));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.roles);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerFormControl.roleId.touched || ctx.submitted) && (ctx.registerFormControl.roleId.errors == null ? null : ctx.registerFormControl.roleId.errors.required));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.states);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerFormControl.stateId.touched || ctx.submitted) && (ctx.registerFormControl.stateId.errors == null ? null : ctx.registerFormControl.stateId.errors.required));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerFormControl.address.touched || ctx.submitted) && (ctx.registerFormControl.address.errors == null ? null : ctx.registerFormControl.address.errors.required));\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","AddUserComponent","constructor","fb","avRoute","userService","router","snapshot","params","id","userForm","group","name","required","address","roleId","stateId","ngOnInit","getStates","getRoles","title","getUserDetail","subscribe","res","setValue","error","console","registerFormControl","controls","addUser","value","alert","navigate","updateUser","save","submitted","valid","data","states","roles","cancel","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Test\\FullStack\\SimpleCRUD\\SimpleCRUD\\SimpleCRUD\\ClientApp\\src\\app\\add-user\\add-user.component.ts","D:\\Test\\FullStack\\SimpleCRUD\\SimpleCRUD\\SimpleCRUD\\ClientApp\\src\\app\\add-user\\add-user.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { State } from '../models/state';\nimport { Role } from '../models/role';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n  userForm: FormGroup;\n  title = 'Add User';\n  id: number;\n  errorMessage: any;\n  states: State[];\n  roles: Role[];\n  submitted = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private avRoute: ActivatedRoute,\n    private userService: UserService,\n    private router: Router\n  ) {\n    if (this.avRoute.snapshot.params.id) {\n      this.id = this.avRoute.snapshot.params.id;\n    }\n\n    this.userForm = this.fb.group(\n      {\n        id: 0,\n        name: ['', [Validators.required]],\n        address: ['', [Validators.required]],\n        roleId: ['', [Validators.required]],\n        stateId: ['', [Validators.required]]\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    this.getStates();\n    this.getRoles();\n\n    if (this.id > 0) {\n      this.title = 'Update User';\n\n      this.userService.getUserDetail(this.id).subscribe(\n        (res) => {\n          this.userForm.setValue(res);\n        },\n        (error) => console.error(error)\n      );\n    }\n  }\n\n  get registerFormControl() {\n    return this.userForm.controls;\n  }\n\n  private addUser(): void {\n    this.userService.addUser(this.userForm.value).subscribe(\n      () => {\n        alert('User added successfully');\n        this.router.navigate(['users']);\n      },\n      (error) => alert(error)\n    );\n  }\n\n  private updateUser(): void {\n    this.userService.updateUser(this.userForm.value).subscribe(\n      () => {\n        alert('User updated successfully');\n        this.router.navigate(['users']);\n      },\n      (error) => console.error(error)\n    );\n  }\n\n  save(): void {\n    this.submitted = true;\n    if (!this.userForm.valid) {\n      return;\n    }\n    if (this.title == 'Add User') {\n      this.addUser();\n    }\n    else if (this.title == 'Update User') {\n      this.updateUser();\n    }\n  }\n\n  private getStates(): void {\n    this.userService.getStates().subscribe(\n      (data) => { this.states = data }\n    );\n  }\n\n  private getRoles(): void {\n    this.userService.getRoles().subscribe(\n      (data) => { this.roles = data }\n    );\n  }\n\n  public cancel(): void {\n    this.router.navigate(['users']);\n  }\n\n}\n","<h1>{{ title }}</h1>\n<hr/>\n\n<form [formGroup]=\"userForm\" (ngSubmit)=\"save()\">\n    <div class=\"form-group row\">\n        <label class=\"control-label col-md-12\">Name</label>\n        <div class=\"col-md-4\">\n            <input type=\"text\" class=\"form-control\" formControlName=\"name\">\n        </div>\n        <span class=\"text-danger\"\n            *ngIf=\"\n            (registerFormControl.name.touched || submitted) &&\n            registerFormControl.name.errors?.required\">\n            Name is required\n        </span>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"control-label col-md-12\">Role</label>\n        <div class=\"col-md-4\">\n            <select class=\"form-control\" data-val=\"true\" formControlName=\"roleId\">\n                <option value=\"\">--Select Role--</option>\n                <option *ngFor=\"let role of roles\" value=\"{{ role.id }}\">\n                    {{ role.title }}\n                </option>\n            </select>\n        </div>\n        <span class=\"text-danger\"\n            *ngIf=\"\n            (registerFormControl.roleId.touched || submitted) &&\n            registerFormControl.roleId.errors?.required\">\n            Role is required\n        </span>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"control-label col-md-12\">State</label>\n        <div class=\"col-md-4\">\n            <select class=\"form-control\" data-val=\"true\" formControlName=\"stateId\">\n                <option value=\"\">--Select State--</option>\n                <option *ngFor=\"let state of states\" value=\"{{ state.id }}\">\n                    {{ state.name }}\n                </option>\n            </select>\n        </div>\n        <span class=\"text-danger\"\n            *ngIf=\"\n            (registerFormControl.stateId.touched || submitted) &&\n            registerFormControl.stateId.errors?.required\">\n            State is required\n        </span>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"control-label col-md-12\">Address</label>\n        <div class=\"col-md-4\">\n            <textarea type=\"text\" class=\"form-control\" formControlName=\"address\">\n                </textarea>\n        </div>\n        <span class=\"text-danger\"\n            *ngIf=\"\n            (registerFormControl.address.touched || submitted) &&\n            registerFormControl.address.errors?.required\">\n            Address is required\n        </span>\n    </div>\n\n    <hr/>\n\n    <div class=\"form-group\">\n        <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n        <button class=\"btn btn-danger\" (click)=\"cancel()\">Cancel</button>\n    </div>\n\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}