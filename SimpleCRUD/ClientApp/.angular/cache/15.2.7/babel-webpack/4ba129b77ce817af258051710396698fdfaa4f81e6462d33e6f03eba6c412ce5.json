{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet AddUserComponent = class AddUserComponent {\n  constructor(fb, avRoute, userService, router) {\n    this.fb = fb;\n    this.avRoute = avRoute;\n    this.userService = userService;\n    this.router = router;\n    this.title = 'Add User';\n    this.submitted = false;\n    if (this.avRoute.snapshot.params.id) {\n      this.id = this.avRoute.snapshot.params.id;\n    }\n    this.userForm = this.fb.group({\n      id: 0,\n      name: ['', [Validators.required]],\n      address: ['', [Validators.required]],\n      roleId: ['', [Validators.required]],\n      stateId: ['', [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    this.getStates();\n    this.getRoles();\n    if (this.id > 0) {\n      this.title = 'Update User';\n      this.userService.getUserDetail(this.id).subscribe(res => {\n        this.userForm.setValue(res);\n      }, error => console.error(error));\n    }\n  }\n  get RegisterFormControl() {\n    return this.userForm.controls;\n  }\n  addUser() {\n    this.userService.addUser(this.userForm.value).subscribe(() => {\n      this.router.navigate(['users']);\n    }, error => console.error(error));\n  }\n  updateUser() {\n    this.userService.updateUser(this.userForm.value).subscribe(() => {\n      this.router.navigate(['users']);\n    }, error => console.error(error));\n  }\n  save() {\n    this.submitted = true;\n    if (!this.userForm.valid) {\n      return;\n    }\n    if (this.title == 'Add User') {\n      this.addUser();\n    } else if (this.title == 'Update User') {\n      this.updateUser();\n    }\n  }\n  getStates() {\n    this.userService.getStates().subscribe(data => {\n      this.states = data;\n    });\n  }\n  getRoles() {\n    this.userService.getRoles().subscribe(data => {\n      this.roles = data;\n    });\n  }\n  cancel() {\n    this.router.navigate(['users']);\n  }\n};\nAddUserComponent = __decorate([Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})], AddUserComponent);\nexport { AddUserComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","AddUserComponent","constructor","fb","avRoute","userService","router","snapshot","params","id","userForm","group","name","required","address","roleId","stateId","ngOnInit","getStates","getRoles","title","getUserDetail","subscribe","res","setValue","error","console","RegisterFormControl","controls","addUser","value","navigate","updateUser","save","submitted","valid","data","states","roles","cancel","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Test\\FullStack\\SimpleCRUD\\SimpleCRUD\\SimpleCRUD\\ClientApp\\src\\app\\add-user\\add-user.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { State } from '../models/state';\nimport { Role } from '../models/role';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n  userForm: FormGroup;\n  title = 'Add User';\n  id: number;\n  errorMessage: any;\n  states: State[];\n  roles: Role[];\n  submitted = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private avRoute: ActivatedRoute,\n    private userService: UserService,\n    private router: Router\n  ) {\n    if (this.avRoute.snapshot.params.id) {\n      this.id = this.avRoute.snapshot.params.id;\n    }\n\n    this.userForm = this.fb.group(\n      {\n        id: 0,\n        name: ['', [Validators.required]],\n        address: ['', [Validators.required]],\n        roleId: ['', [Validators.required]],\n        stateId: ['', [Validators.required]]\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    this.getStates();\n    this.getRoles();\n\n    if (this.id > 0) {\n      this.title = 'Update User';\n\n      this.userService.getUserDetail(this.id).subscribe(\n        (res) => {\n          this.userForm.setValue(res);\n        },\n        (error) => console.error(error)\n      );\n    }\n  }\n\n  get RegisterFormControl() {\n    return this.userForm.controls;\n  }\n\n  private addUser(): void {\n    this.userService.addUser(this.userForm.value).subscribe(\n      () => {\n        this.router.navigate(['users']);\n      },\n      (error) => console.error(error)\n    );\n  }\n\n  private updateUser(): void {\n    this.userService.updateUser(this.userForm.value).subscribe(\n      () => {\n        this.router.navigate(['users']);\n      },\n      (error) => console.error(error)\n    );\n  }\n\n  save(): void {\n    this.submitted = true;\n    if (!this.userForm.valid) {\n      return;\n    }\n    if (this.title == 'Add User') {\n      this.addUser();\n    }\n    else if (this.title == 'Update User') {\n      this.updateUser();\n    }\n  }\n\n  private getStates(): void {\n    this.userService.getStates().subscribe(\n      (data) => { this.states = data }\n    );\n  }\n\n  private getRoles(): void {\n    this.userService.getRoles().subscribe(\n      (data) => { this.roles = data }\n    );\n  }\n\n  private cancel(): void {\n    this.router.navigate(['users']);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}