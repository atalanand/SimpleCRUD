{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = '/api/User/';\n  }\n  getUsers() {\n    return this.http.get(this.baseUrl);\n  }\n  getUserDetail(id) {\n    return this.http.get(this.baseUrl + id);\n  }\n  addUser(user) {\n    return this.http.post(this.baseUrl, user);\n  }\n  updateUser(user) {\n    return this.http.put(this.baseUrl, user);\n  }\n  deleteUser(id) {\n    return this.http.delete(this.baseUrl + id);\n  }\n  getStates() {\n    return this.http.get(this.baseUrl + 'GetStates');\n  }\n  getRoles() {\n    return this.http.get(this.baseUrl + 'GetRoles');\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADxB,YAAO,GAAG,YAAY;EACkB;EAExCC,QAAQ;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAS,IAAI,CAACC,OAAO,CAAC;EAC5C;EAEAC,aAAa,CAACC,EAAU;IACtB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAO,IAAI,CAACC,OAAO,GAAGE,EAAE,CAAC;EAC/C;EAEAC,OAAO,CAACC,IAAU;IAChB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACL,OAAO,EAAEI,IAAI,CAAC;EAC3C;EAEAE,UAAU,CAACF,IAAU;IACnB,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAC,IAAI,CAACP,OAAO,EAAEI,IAAI,CAAC;EAC1C;EAEAI,UAAU,CAACN,EAAU;IACnB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAC,IAAI,CAACT,OAAO,GAAGE,EAAE,CAAC;EAC5C;EAEAQ,SAAS;IACP,OAAO,IAAI,CAACb,IAAI,CAACE,GAAG,CAAU,IAAI,CAACC,OAAO,GAAG,WAAW,CAAC;EAC3D;EAEAW,QAAQ;IACN,OAAO,IAAI,CAACd,IAAI,CAACE,GAAG,CAAS,IAAI,CAACC,OAAO,GAAG,UAAU,CAAC;EACzD;;AA9BWL,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAiB,SAAXjB,WAAW;EAAAkB,YAFV;AAAM","names":["UserService","constructor","http","getUsers","get","baseUrl","getUserDetail","id","addUser","user","post","updateUser","put","deleteUser","delete","getStates","getRoles","factory","providedIn"],"sourceRoot":"","sources":["D:\\Test\\FullStack\\SimpleCRUD\\SimpleCRUD\\SimpleCRUD\\ClientApp\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { State } from '../models/state';\nimport { Role } from '../models/role';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  baseUrl = '/api/User/';\n  constructor(private http: HttpClient) { }\n\n  getUsers(): Observable<User[]>{\n    return this.http.get<User[]>(this.baseUrl);\n  }\n\n  getUserDetail(id: number): Observable<User>{\n    return this.http.get<User>(this.baseUrl + id);\n  }\n\n  addUser(user: User): Observable<any>{\n    return this.http.post(this.baseUrl, user);\n  }\n\n  updateUser(user: User): Observable<any>{\n    return this.http.put(this.baseUrl, user);\n  }\n\n  deleteUser(id: number): Observable<any>{\n    return this.http.delete(this.baseUrl + id);\n  }\n\n  getStates(): Observable<State[]>{\n    return this.http.get<State[]>(this.baseUrl + 'GetStates');\n  }\n\n  getRoles(): Observable<Role[]>{\n    return this.http.get<Role[]>(this.baseUrl + 'GetRoles');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}